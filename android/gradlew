#!/usr/bin/env sh

##############################################################################
##
##  Gradle start up script for POSIX generated by Gradle.
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_HOME="$(cd "$(dirname "$0")" && pwd -P)"

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        echo "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME" >&2
        exit 1
    fi
else
    JAVACMD="java"
fi

# Collect all arguments for the java command, following the shell quoting and substitution rules.
save () {
    for i in "$@" ; do
        printf '%s\n' "$i" | sed "s/'/'\\''/g"
    done
}
APP_ARGS=$(save "$@")

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar

# For Darwin, add options to specify use of Apple's Java 6 by default, in case it's installed.
OS="$(uname)"
case "$OS" in
  Darwin*)
    if [ -z "$JAVA_HOME" ] ; then
      if [ -x "/usr/libexec/java_home" ] ; then
        JAVA_HOME="$(/usr/libexec/java_home)"
        export JAVA_HOME
      fi
    fi
    ;;
esac

# Escape application args to handle spaces, then execute Gradle wrapper.
eval exec "$JAVACMD" $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \
  -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
